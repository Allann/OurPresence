file[0] = Domain\Account.cs
// Created using OurPresence.Modeller template 'Domain Class' version 1.0.0
// NOTE: This file cannot be overwritten when regenerated

namespace Mizrael.SuperSafeBank.Domain
{
    public partial class Account
    {
        public Account(Guid ownerId, Money balance)
        {
            OwnerId = ownerId;
            Balance = balance;
        }

        public partial void Withdraw(Money amount)
        {
            // todo: Add Withdraw behaviour here
        }

        public partial void Deposit(Money amount)
        {
            // todo: Add Deposit behaviour here
        }

        protected override void Apply(IDomainEvent<Guid> @event)
        {
            // todo: Apply events
        }
    }
}

file[1] = Domain\Account.generated.cs
// Auto-generated using OurPresence.Modeller template 'Domain Class' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

namespace Mizrael.SuperSafeBank.Domain
{
    partial class Account : BaseAggregateRoot<Account, Guid>
    {
        public Guid OwnerId { get; private set; }

        public Money Balance { get; private set; }

        public partial void Withdraw(Money amount);

        public partial void Deposit(Money amount);
    }
}

file[2] = Events\Withdrawal.cs
namespace Mizrael.SuperSafeBank.Events
{
    public class Withdrawal : BaseDomainEvent<Account, Guid>
    {
        /// <summary>
        /// for deserialization
        /// </summary>
        private Withdrawal() { }

        public Withdrawal(Account account) : base(account)
        {
            // todo: 
        }
    }
}

file[3] = Events\Deposit.cs
namespace Mizrael.SuperSafeBank.Events
{
    public class Deposit : BaseDomainEvent<Account, Guid>
    {
        /// <summary>
        /// for deserialization
        /// </summary>
        private Deposit() { }

        public Deposit(Account account) : base(account)
        {
            // todo: 
        }
    }
}

