file[0] = Domain\Account.cs
// Created using OurPresence.Modeller template 'Domain Class' version 1.0.0
// NOTE: This file cannot be overwritten when regenerated

using System;
using OurPresence.Core.Models;

namespace SuperSafeBank.Domain
{
    public class Account : BaseAggregateRoot<Account, Guid>
    {
        public Account(Guid ownerId, Money balance)
        {
            OwnerId = ownerId;
            Balance = balance;
        }

        public Guid OwnerId { get; private set; }

        public Money Balance { get; private set; }

        public void Withdraw(Money amount)
        {
            // todo: Add Withdraw behaviour here
        }

        public void Deposit(Money amount)
        {
            // todo: Add Deposit behaviour here
        }

        protected override void Apply(IDomainEvent<Guid> @event)
        {
            // todo: Apply events
        }
    }
}

file[1] = Events\Withdrawal.cs
using System;
using SuperSafeBank.Domain.Models;

namespace SuperSafeBank.Domain.Events
{
    public class Withdrawal : BaseDomainEvent<Account, Guid>
    {
        /// <summary>
        /// for deserialization
        /// </summary>
        private Withdrawal() { }

        public Withdrawal(Account account) : base(account)
        {
            // todo: 
        }
    }
}

file[2] = Events\Deposit.cs
using System;
using SuperSafeBank.Domain.Models;

namespace SuperSafeBank.Domain.Events
{
    public class Deposit : BaseDomainEvent<Account, Guid>
    {
        /// <summary>
        /// for deserialization
        /// </summary>
        private Deposit() { }

        public Deposit(Account account) : base(account)
        {
            // todo: 
        }
    }
}

file[3] = Commands\Deposit.cs
using System;
using System.Threading;
using System.Threading.Tasks;
using MediatR;

namespace SuperSafeBank.Domain.Commands
{
    public class Deposit : INotification
    {
        public Deposit(Guid accountId, Money amount)
        {
            AccountId = accountId;
            Amount = amount;
        }

        public Guid AccountId { get;  set; }

        public Money Amount { get;  set; }

    }

    public class DepositHandler : INotificationHandler<Deposit>
    {
        public async Task Handle(Deposit command, CancellationToken cancellationToken)
        {
            // todo: Add code to complete the command
        }
    }
}

file[4] = Commands\Withdraw.cs
using System;
using System.Threading;
using System.Threading.Tasks;
using MediatR;

namespace SuperSafeBank.Domain.Commands
{
    public class Withdraw : INotification
    {
        public Withdraw(Guid accountId, Money amount)
        {
            AccountId = accountId;
            Amount = amount;
        }

        public Guid AccountId { get;  set; }

        public Money Amount { get;  set; }

    }

    public class WithdrawHandler : INotificationHandler<Withdraw>
    {
        public async Task Handle(Withdraw command, CancellationToken cancellationToken)
        {
            // todo: Add code to complete the command
        }
    }
}

